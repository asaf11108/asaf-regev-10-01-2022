{"version":3,"file":"static/js/2598.a632f7e5.chunk.js","mappings":"wTAOaA,GAAW,OAAOC,EAAAA,EAAP,uBAClBC,EAAAA,EAAAA,GAAO,SAASC,EAAAA,EAAAA,IAAI,UAAUA,EAAAA,EAAAA,IAAI,UADnB,KAEfD,EAAAA,EAAAA,GAAO,UAAUC,EAAAA,EAAAA,IAAI,QAAQA,EAAAA,EAAAA,IAAI,SAFlB,8CAMf,qBAAGC,QAAqB,EAMtB,KAZa,K,WCsBrB,EAxBqC,SAAC,GAA2B,IACzCC,EADgBC,EAAwB,EAAxBA,SAAUF,EAAc,EAAdA,QAahD,OALAE,GAAQ,kBACHA,GADG,IAEND,MAToBA,EASDC,EAASD,KARvBA,EAGEE,EAAAA,MAAAA,CAAQ,YAA8BF,EAA/B,SAFL,OAWT,SAAC,EAAD,CAAYD,QAASA,EAArB,UACE,UAACI,EAAA,EAAD,CAAYC,QAAQ,KAApB,WACI,uBAAIH,EAASI,SACb,uBAAIJ,EAASK,cACZL,EAASD,OAAQ,gBAAKO,IAAKN,EAASD,KAAMQ,IAAI,wB,+JChBnDC,EAAiB,SAACH,GACpB,MAAM,GAAN,QAAUI,EAAAA,EAAAA,GAAyC,EAAnCC,OAAOL,EAAYM,MAAM,GAAI,IAAQ,EAAI,GAAI,GAA7D,UAGEC,EAAqB,SAACC,GACxB,IAAMC,GAAkBC,EAAAA,EAAAA,IAAYC,EAAAA,GAEpC,OAAOC,EAAAA,EAAAA,UAAQ,WACX,IAAIC,EAAqBL,EAWzB,OAVIC,IAAoBK,EAAAA,EAAAA,aACpBD,EAAqBL,EAAkBO,KAAI,SAAAC,GAAgB,yBACpDA,GADoD,IAEvDhB,YAAaG,EAAea,EAAiBhB,aAC7CiB,UAAWD,EAAiBC,UAAUF,KAAI,SAAApB,GAAQ,yBAC3CA,GAD2C,IAE9CK,YAAaG,EAAeR,EAASK,wBAI1Ca,IACR,CAACL,EAAmBC,KAGdS,EAAwB,SAACF,GAClC,IAAMR,GAAoBI,EAAAA,EAAAA,UAAQ,WAChC,MAAO,CAACI,KACP,CAACA,IAEJ,OAAOT,EAAmBC,GAAmB,IAGpCW,EAAyB,SAACX,GACnC,OAAOD,EAAmBC,K,gGCrCvB,E,QAIHY,EAAAA,QAFAC,GAFG,EACHC,yBADG,EAEHD,yBACAE,EAHG,EAGHA,iC,sBCLJ,IAAIR,EAAM,CACT,UAAW,MACX,WAAY,KACZ,WAAY,MACZ,WAAY,MACZ,WAAY,KACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,UAAW,MACX,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,KACZ,WAAY,MACZ,UAAW,MACX,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,KACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,UAAW,MACX,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,WAAY,MACZ,UAAW,MACX,UAAW,MACX,UAAW,MACX,UAAW,OAIZ,SAASS,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEd,EAAKU,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOf,EAAIU,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKlB,IAEpBS,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,O","sources":["components/forecast/forecast.style.ts","components/forecast/forecast.tsx","hooks/temprature-type.hook.ts","store/favorite-locations/favorite-locations.action.ts","assets/weather-icons|sync|/^/.//.*/.png$"],"sourcesContent":["import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { Card } from \"@mui/material\";\nimport { rem } from \"polished\";\nimport { spread } from \"../../styles/vendors/spread\";\nimport { ForecastProps } from \"./forecast.model\";\n\nexport const Forecast = styled(Card)<Pick<ForecastProps, 'onClick'>> `\n    ${spread('width', rem('112px'), rem('152px'))}\n    ${spread('margin', rem('4px'), rem('16px'))}\n    text-align: center;\n    background-color: white;\n\n    ${({ onClick }) => onClick ? css`\n    cursor: pointer;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n    ` : ''}\n`;\n","import { VFC } from 'react';\nimport { ForecastProps } from './forecast.model';\nimport { Typography } from '@mui/material';\nimport * as S from \"./forecast.style\";\n\nconst Forecast: VFC<ForecastProps> = ({ forecast, onClick }) => {\n  const buildIconUrl = (icon?: string): string => {\n    if (!icon) {\n      return \"\";\n    }\n    return require(`../../assets/weather-icons/${icon}.png`);\n  };\n\n  forecast = {\n    ...forecast,\n    icon: buildIconUrl(forecast.icon),\n  };\n\n  return (\n    <S.Forecast onClick={onClick}>\n      <Typography variant=\"h5\">\n          <p>{forecast.title}</p>\n          <p>{forecast.temperature}</p>\n          {forecast.icon && <img src={forecast.icon} alt=\"Weather icon\" />}\n      </Typography>\n    </S.Forecast>\n  );\n};\n\nexport default Forecast;\n","import { FavoriteLocation } from './../store/favorite-locations/favorite-locations.model';\r\nimport { GeneralTemperatureModeSelect } from './../store/general/general.selector';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMemo } from 'react';\r\nimport { TemperatureType } from '../store/general/general.model';\r\nimport { round } from 'lodash-es';\r\n\r\nconst calcTemprature = (temperature: string): string => {\r\n    return `${round(Number(temperature.slice(0, -2)) * 9/5 + 32, 1)}\\u00B0F`; // calculation to fahrenheit and round to 1 digits precision\r\n}\r\n\r\nconst useTemperatureType = (favoriteLocations: FavoriteLocation[]) => {\r\n    const temperatureType = useSelector(GeneralTemperatureModeSelect);\r\n\r\n    return useMemo(() => {\r\n        let _favoriteLocations = favoriteLocations;\r\n        if (temperatureType === TemperatureType.Fahrenheit) {\r\n            _favoriteLocations = favoriteLocations.map(favoriteLocation => ({\r\n                ...favoriteLocation,\r\n                temperature: calcTemprature(favoriteLocation.temperature),\r\n                forecasts: favoriteLocation.forecasts.map(forecast => ({\r\n                    ...forecast,\r\n                    temperature: calcTemprature(forecast.temperature)\r\n                }))\r\n            }))\r\n        }\r\n        return _favoriteLocations;\r\n    }, [favoriteLocations, temperatureType]);\r\n}\r\n\r\nexport const useOneTemperatureType = (favoriteLocation: FavoriteLocation) => {\r\n    const favoriteLocations = useMemo(() => {\r\n      return [favoriteLocation];\r\n    }, [favoriteLocation])\r\n\r\n    return useTemperatureType(favoriteLocations)[0];\r\n};\r\n\r\nexport const useManyTemperatureType = (favoriteLocations: FavoriteLocation[]) => {\r\n    return useTemperatureType(favoriteLocations);\r\n};\r\n","import { favoriteLocationsSlice } from \"./favorite-locations.state\";\r\n\r\nexport const {\r\n    favoriteLocationsLoading,\r\n    favoriteLocationsActive,\r\n    favoriteLocationsToggleFavorite\r\n} = favoriteLocationsSlice.actions\r\n","var map = {\n\t\"./1.png\": 20167,\n\t\"./11.png\": 4961,\n\t\"./12.png\": 26988,\n\t\"./13.png\": 21930,\n\t\"./14.png\": 2521,\n\t\"./15.png\": 49523,\n\t\"./16.png\": 30107,\n\t\"./17.png\": 68513,\n\t\"./18.png\": 44763,\n\t\"./19.png\": 32795,\n\t\"./2.png\": 90827,\n\t\"./20.png\": 35436,\n\t\"./21.png\": 86962,\n\t\"./22.png\": 29616,\n\t\"./23.png\": 29079,\n\t\"./24.png\": 69834,\n\t\"./25.png\": 50806,\n\t\"./26.png\": 1840,\n\t\"./29.png\": 77038,\n\t\"./3.png\": 83348,\n\t\"./30.png\": 40797,\n\t\"./31.png\": 15271,\n\t\"./32.png\": 17500,\n\t\"./33.png\": 4065,\n\t\"./34.png\": 61895,\n\t\"./35.png\": 54746,\n\t\"./36.png\": 68464,\n\t\"./37.png\": 75212,\n\t\"./38.png\": 31324,\n\t\"./39.png\": 61669,\n\t\"./4.png\": 61093,\n\t\"./40.png\": 60809,\n\t\"./41.png\": 96235,\n\t\"./42.png\": 99769,\n\t\"./43.png\": 11919,\n\t\"./44.png\": 15607,\n\t\"./5.png\": 13809,\n\t\"./6.png\": 58305,\n\t\"./7.png\": 75241,\n\t\"./8.png\": 57816\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48110;"],"names":["Forecast","Card","spread","rem","onClick","icon","forecast","require","Typography","variant","title","temperature","src","alt","calcTemprature","round","Number","slice","useTemperatureType","favoriteLocations","temperatureType","useSelector","GeneralTemperatureModeSelect","useMemo","_favoriteLocations","TemperatureType","map","favoriteLocation","forecasts","useOneTemperatureType","useManyTemperatureType","favoriteLocationsSlice","favoriteLocationsActive","favoriteLocationsLoading","favoriteLocationsToggleFavorite","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}