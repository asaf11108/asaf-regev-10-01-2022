{"version":3,"file":"static/js/7666.c90e15cb.chunk.js","mappings":"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D,WAAY,CACX,KACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,KAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,UAAW,CACV,MACA,KAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,KAED,WAAY,CACX,KACA,MAED,WAAY,CACX,MACA,MAED,UAAW,CACV,MACA,MAED,WAAY,CACX,MACA,KAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,KACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,UAAW,CACV,MACA,MAED,WAAY,CACX,MACA,KAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,WAAY,CACX,MACA,MAED,UAAW,CACV,MACA,MAED,UAAW,CACV,MACA,MAED,UAAW,CACV,MACA,MAED,UAAW,CACV,MACA,OAGF,SAASuH,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAE1H,EAAKwH,GAC9B,OAAO5I,QAAQC,UAAUJ,MAAK,WAC7B,IAAIkJ,EAAI,IAAIC,MAAM,uBAAyBJ,EAAM,KAEjD,MADAG,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAM9H,EAAIwH,GAAMO,EAAKD,EAAI,GAC7B,OAAOL,EAAoBE,EAAEG,EAAI,IAAIrJ,MAAK,WACzC,OAAOgJ,EAAoBO,EAAED,EAAI,OAGnCR,EAAoBU,KAAO,WAAa,OAAOC,OAAOD,KAAKjI,IAC3DuH,EAAoBQ,GAAK,MACzBI,EAAOC,QAAUb","sources":["components/favorite/favorite.tsx","components/forecast/forecast.style.ts","components/forecast/forecast.tsx","hooks/temprature-type.hook.ts","pages/home/home-form.hook.ts","pages/home/home-query.hook.ts","components/autocomplete/autocomplete.tsx","components/autocomplete/autocomplete-input.hook.ts","pages/home/home.style.ts","pages/home/home.tsx","store/favorite-locations/favorite-locations.action.ts","assets/weather-icons|lazy|/^/.//.*/.png$/|groupOptions: {}|namespace object"],"sourcesContent":["import { VFC } from 'react';\nimport { FavoriteProps } from './favorite.model';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\n\n\nconst Favorite: VFC<FavoriteProps> = ({ isFavorite }) => {\n\n    return (\n        <>\n            {isFavorite\n                ? <FavoriteIcon fontSize=\"inherit\" color=\"error\" />\n                : <FavoriteBorderIcon fontSize=\"inherit\" />}\n        </>\n    );\n}\n\nexport default Favorite;\n","import { css } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { Card } from \"@mui/material\";\nimport { spread } from \"../../styles/vendors/spread\";\nimport { ForecastProps } from \"./forecast.model\";\n\nexport const Forecast = styled(Card)<Pick<ForecastProps, 'onClick'>> `\n    ${spread('width', '110px', '150px')}\n    ${spread('margin', '5px', '15px')}\n    text-align: center;\n    background-color: white;\n\n    ${({ onClick }) => onClick ? css`\n    cursor: pointer;\n\n    &:hover {\n        filter: brightness(85%);\n    }\n    ` : ''}\n`;\n","import { VFC } from 'react';\nimport { ForecastProps } from './forecast.model';\nimport { Typography } from '@mui/material';\nimport * as S from \"./forecast.style\";\nimport usePromise from 'react-use-promise';\n\nconst Forecast: VFC<ForecastProps> = ({ forecast, onClick }) => {\n  const [icon] = usePromise(\n    () => forecast.icon ?\n      import(`../../assets/weather-icons/${forecast.icon}.png`).then(res => res.default) :\n      Promise.resolve(''),\n    [forecast]\n  );\n\n  return (\n    <S.Forecast onClick={onClick}>\n      <Typography variant=\"h5\">\n          <p>{forecast.title}</p>\n          <p>{forecast.temperature}</p>\n          <img src={icon} alt=\"Weather icon\" />\n      </Typography>\n    </S.Forecast>\n  );\n};\n\nexport default Forecast;\n","import { FavoriteLocation } from './../store/favorite-locations/favorite-locations.model';\r\nimport { GeneralTemperatureModeSelect } from './../store/general/general.selector';\r\nimport { useSelector } from 'react-redux';\r\nimport { useMemo } from 'react';\r\nimport { TemperatureType } from '../store/general/general.model';\r\nimport { round } from 'lodash-es';\r\n\r\nconst calcTemprature = (temperature: string): string => {\r\n    return `${round(Number(temperature.slice(0, -2)) * 9/5 + 32, 1)}\\u00B0F`; // calculation to fahrenheit and round to 1 digits precision\r\n}\r\n\r\nconst useTemperatureType = (favoriteLocations: FavoriteLocation[]) => {\r\n    const temperatureType = useSelector(GeneralTemperatureModeSelect);\r\n\r\n    return useMemo(() => {\r\n        let _favoriteLocations = favoriteLocations;\r\n        if (temperatureType === TemperatureType.Fahrenheit) {\r\n            _favoriteLocations = favoriteLocations.map(favoriteLocation => ({\r\n                ...favoriteLocation,\r\n                temperature: calcTemprature(favoriteLocation.temperature),\r\n                forecasts: favoriteLocation.forecasts.map(forecast => ({\r\n                    ...forecast,\r\n                    temperature: calcTemprature(forecast.temperature)\r\n                }))\r\n            }))\r\n        }\r\n        return _favoriteLocations;\r\n    }, [favoriteLocations, temperatureType]);\r\n}\r\n\r\nexport const useOneTemperatureType = (favoriteLocation: FavoriteLocation) => {\r\n    const favoriteLocations = useMemo(() => {\r\n      return [favoriteLocation];\r\n    }, [favoriteLocation])\r\n\r\n    return useTemperatureType(favoriteLocations)[0];\r\n};\r\n\r\nexport const useManyTemperatureType = (favoriteLocations: FavoriteLocation[]) => {\r\n    return useTemperatureType(favoriteLocations);\r\n};\r\n","import { UseControllerProps } from \"react-hook-form\";\n\nexport const HOME_FORM_REG_EXP = /^[a-zA-Z ]+$/;\n\nexport const CONTROLLER_LOCATION_INPUT_RULES: UseControllerProps['rules'] = {\n    required: {\n        value: true,\n        message: `Please enter location`,\n    },\n    pattern: {\n        value: HOME_FORM_REG_EXP,\n        message: \"Only letters are allowed\",\n    },\n}\n\n// INFO: this relavent for autocomplete with form and submit\n// export const CONTROLLER_NAME_LOCATION = 'location';\n\n// export interface HomeForm {\n//     [CONTROLLER_NAME_LOCATION]: Location['key'];\n// }\n\n// export const useHomeForm = (defaultLocation: Location): FormProps<HomeForm, Location, Location['key']> => {\n//     const { handleSubmit, register, getFieldState, setValue } = useForm<HomeForm>({ mode: 'onChange', defaultValues: { [CONTROLLER_NAME_LOCATION]: defaultLocation.key } });\n    \n//     const { ref: controlRef, ...registerProps } = register(CONTROLLER_NAME_LOCATION);\n\n//     return { \n//         handleSubmit,\n//         controls: {\n//             [CONTROLLER_NAME_LOCATION]: {\n//                 ...registerProps,\n//                 controlRef,\n//                 error: getFieldState(CONTROLLER_NAME_LOCATION).error,\n//                 setValue: (val, options) => setValue(CONTROLLER_NAME_LOCATION, val, options),\n//                 defaultOption: defaultLocation\n//             }\n//         }\n//     };\n// }\n","import { useState } from \"react\";\nimport usePromise from \"react-use-promise\";\nimport API from \"../../api/api\";\nimport { AutocompleteOption } from \"../../api/interfaces/autocomplete\";\n\nconst useHomeQuery = () => {\n    const [query, setQuery] = useState<string>();\n    const promiseQuery = usePromise<AutocompleteOption[]>(\n      () => query ? API.getLocations(query) : Promise.resolve([]),\n      [query]\n    );\n\n    return { setQuery, promiseQuery };\n}\n\nexport default useHomeQuery;\n","import { FC, SyntheticEvent, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Autocomplete as MuiAutocomplete, TextField } from \"@mui/material\";\nimport { AutocompleteProps } from \"./autocomplete.model\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { CircularProgress } from \"@mui/material\";\nimport { useDebounce } from \"use-debounce\";\nimport { usePrevious } from \"react-use\";\nimport { get } from \"lodash-es\";\nimport { useAutocompleteInput } from \"./autocomplete-input.hook\";\n\nconst Autocomplete = <T extends {}, Val>({\n  options = [],\n  loading = false,\n  placeholder = \"option\",\n  defaultOption,\n  idProp = \"id\",\n  nameProp = \"name\",\n  inputRules,\n  error,\n  onSelect,\n  onInputDebounce,\n  onInputFocus,\n  onInput,\n  controlRef,\n  onChange,\n  onBlur,\n  setValue,\n  ...otherProps\n}: AutocompleteProps<T, Val>): ReturnType<FC> => {\n  // throw error\n\n  const [open, setOpen] = useState(false);\n  const [option, setOption] = useState(defaultOption);\n\n  const inputController = useAutocompleteInput(get(defaultOption, nameProp, \"\"), inputRules);\n\n  const [inputDebounce] = useDebounce(inputController.field.value, 1000);\n  const previousInputDebounce = usePrevious(inputDebounce);\n\n  useEffect(() => {\n    previousInputDebounce !== inputDebounce &&\n      open &&\n      !inputController.fieldState.error &&\n      !error &&\n      onInputDebounce?.(inputDebounce);\n  }, [open, inputController.fieldState.error, error, inputDebounce, previousInputDebounce, onInputDebounce]);\n\n  const _onInput: AutocompleteProps<T>[\"onInput\"] = query => {\n    inputController.field.onChange(query);\n    onInput?.(query);\n  };\n\n  const _onSelect = (event: SyntheticEvent, option: T) => {\n    _onInput(get(option, nameProp, \"\"));\n    if (option) {\n      setOption(option);\n      onChange?.(event);\n      setValue?.(get(option, idProp, option));\n      onSelect(option);\n    }\n  };\n\n  const _onBlur: AutocompleteProps<T>[\"onBlur\"] = async event => {\n    inputController.field.onBlur();\n    setOpen(false);\n    onBlur?.(event);\n  };\n\n  return (\n    <MuiAutocomplete\n      {...otherProps}\n      ref={controlRef}\n      defaultValue={defaultOption}\n      value={option}\n      open={open && !inputController.fieldState.error}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      options={options}\n      onChange={(event, option) => _onSelect(event, option!)}\n      onInputChange={(_, query) => _onInput(query)}\n      onBlur={_onBlur}\n      getOptionLabel={(option) => get(option, nameProp, option)}\n      isOptionEqualToValue={(option, value) =>\n        get(option, idProp, option) === get(value, idProp, value)\n      }\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          data-testid=\"autocomplete-textfield\"\n          variant=\"standard\"\n          fullWidth\n          placeholder={placeholder}\n          InputProps={{\n            ...params.InputProps,\n            startAdornment: <SearchIcon />,\n            endAdornment: loading && <CircularProgress size=\"1em\" />,\n          }}\n          error={!!inputController.fieldState.error || !!error}\n          helperText={inputController.fieldState.error?.message || error?.message}\n          onFocus={() => option && onInputFocus?.(option)}\n        />\n      )}\n    />\n  );\n};\n\nexport default Autocomplete;\n","import { useForm, useController, UseControllerProps } from \"react-hook-form\";\n\nexport const useAutocompleteInput = (defaultValue: string, rules: UseControllerProps['rules']) => {\n    const { control } = useForm<{ name: string }>({ mode: 'onChange' });\n    return useController({\n      name: \"name\",\n      control,\n      defaultValue,\n      rules,\n    });\n}\n","import styled from \"@emotion/styled\";\nimport { Card, css, Typography } from \"@mui/material\";\nimport { spread } from \"../../styles/vendors/spread\";\n\nconst SharedBody = css`\n    display: flex;\n    flex-direction: column;\n    ${spread('minHeight', '400px', '500px')}\n`;\n\nconst SharedBodyStates = css`\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const Home = styled.div`\n    text-align: center;\n`;\n\nexport const AutocompleteCard = styled(Card)`\n    ${spread('width', '90%', '50%')}\n    margin: 0 auto;\n    ${spread('marginBottom', '20px', '30px')}\n`;\n\nexport const TitleTypography = styled(Typography)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap-reverse;\n    & > span {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n        align-items: center;\n    }\n\n    .MuiButton-root {\n        font-size: 40px;\n    }\n`;\n\nexport const BodyHeader = styled.div`\n    ${spread('margin', '20px 0', '60px 0')}\n    ${spread('fontSize', '50px', '80px')}\n    text-align: center;\n`;\n\nexport const Body = styled.div`\n    ${SharedBody}\n    justify-content: center;\n`;\n\nexport const Loader = styled.div`\n    ${SharedBody}\n    ${SharedBodyStates}\n`;\n\nexport const ErrorTypography = styled(Typography)`\n    ${SharedBody}\n    ${SharedBodyStates}\n    font-weight: 600;\n`;\n\nexport const Forecasts = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n","import { VFC, useEffect, useMemo } from \"react\";\nimport { Button, Card, CardContent } from \"@mui/material\";\nimport Forecast from \"../../components/forecast/forecast\";\nimport {\n  FavoriteLocation,\n  Location,\n} from \"../../store/favorite-locations/favorite-locations.model\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchFavoriteLocation } from \"../../store/favorite-locations/favorite-locations.thunk\";\nimport {\n  favoriteLocationsActive,\n  favoriteLocationsToggleFavorite,\n} from \"../../store/favorite-locations/favorite-locations.action\";\nimport {\n  FavoriteLocationSelectActive,\n  FavoriteLocationSelectActiveEntity,\n  FavoriteLocationSelectError,\n  FavoriteLocationSelectLoading,\n} from \"../../store/favorite-locations/favorite-locations.selector\";\nimport Favorite from \"../../components/favorite/favorite\";\nimport { useOneTemperatureType } from \"../../hooks/temprature-type.hook\";\nimport { flow } from \"lodash-es\";\nimport Loader from \"../../components/loader/loader\";\nimport { CONTROLLER_LOCATION_INPUT_RULES, HOME_FORM_REG_EXP } from \"./home-form.hook\";\nimport useHomeQuery from \"./home-query.hook\";\nimport Autocomplete from \"../../components/autocomplete/autocomplete\";\nimport { AutocompleteProps } from \"../../components/autocomplete/autocomplete.model\";\nimport * as S from \"./home.style\";\n\nconst Home: VFC = () => {\n  const dispatch = useDispatch();\n  const loadingLocation = useSelector(FavoriteLocationSelectLoading);\n  const errorLocation = useSelector(FavoriteLocationSelectError);\n  const favoriteLocation: FavoriteLocation = flow([\n    useSelector,\n    useOneTemperatureType,\n  ])(FavoriteLocationSelectActiveEntity);\n\n  const activeLocation = useSelector(FavoriteLocationSelectActive);\n  \n  const {\n    setQuery,\n    promiseQuery: [response, , loadingState],\n  } = useHomeQuery();\n\n  useEffect(() => {\n    dispatch(fetchFavoriteLocation(activeLocation));\n  }, [dispatch, activeLocation]);\n\n  const onLocationSelect: AutocompleteProps<Location>[\"onSelect\"] = (\n    location\n  ) => {\n    dispatch(favoriteLocationsActive(location));\n  };\n\n  const onFavoriteClick = (): void => {\n    dispatch(favoriteLocationsToggleFavorite());\n  };\n\n  const options = useMemo<Location[]>(() => {\n    return (response || [])\n      .filter((location) => HOME_FORM_REG_EXP.test(location.LocalizedName))\n      .map<Location>((location) => ({\n        key: location.Key,\n        localizedName: location.LocalizedName,\n      }));\n  }, [response]);\n\n  return (\n    <S.Home>\n      <S.AutocompleteCard>\n        <CardContent>\n          <Autocomplete<Location, Location['key']>\n            idProp=\"key\"\n            nameProp=\"localizedName\"\n            placeholder=\"Search location\"\n            inputRules={CONTROLLER_LOCATION_INPUT_RULES}\n            loading={loadingState === \"pending\"}\n            defaultOption={activeLocation}\n            options={options}\n            onSelect={onLocationSelect}\n            onInputDebounce={setQuery}\n            onInputFocus={option => setQuery(option.localizedName)}\n          />\n        </CardContent>\n      </S.AutocompleteCard>\n\n      <Card>\n        {loadingLocation ? (\n          <S.Loader>\n            <Loader />\n          </S.Loader>\n        ) : errorLocation || !favoriteLocation ? (\n          <S.ErrorTypography variant=\"h1\">NO DATA</S.ErrorTypography>\n        ) : (\n          <CardContent>\n            <S.TitleTypography gutterBottom variant=\"h5\">\n              <span>\n                <span data-testid=\"localized-name\">\n                  {favoriteLocation.localizedName}\n                </span>\n                <span>{favoriteLocation.temperature}</span>\n              </span>\n              <Button disabled={loadingLocation} onClick={onFavoriteClick}>\n                <Favorite isFavorite={favoriteLocation.isFavorite} />\n              </Button>\n            </S.TitleTypography>\n            <S.Body>\n              <S.BodyHeader>{favoriteLocation.weatherText}</S.BodyHeader>\n              <S.Forecasts>\n                {favoriteLocation.forecasts.map((forecast) => (\n                  <Forecast key={forecast.title} forecast={forecast} />\n                ))}\n              </S.Forecasts>\n            </S.Body>\n          </CardContent>\n        )}\n      </Card>\n    </S.Home>\n  );\n};\n\nexport default Home;\n","import { favoriteLocationsSlice } from \"./favorite-locations.state\";\r\n\r\nexport const {\r\n    favoriteLocationsLoading,\r\n    favoriteLocationsActive,\r\n    favoriteLocationsToggleFavorite\r\n} = favoriteLocationsSlice.actions\r\n","var map = {\n\t\"./1.png\": [\n\t\t20167,\n\t\t167\n\t],\n\t\"./11.png\": [\n\t\t4961,\n\t\t4961\n\t],\n\t\"./12.png\": [\n\t\t26988,\n\t\t6988\n\t],\n\t\"./13.png\": [\n\t\t21930,\n\t\t1930\n\t],\n\t\"./14.png\": [\n\t\t2521,\n\t\t2521\n\t],\n\t\"./15.png\": [\n\t\t49523,\n\t\t9523\n\t],\n\t\"./16.png\": [\n\t\t30107,\n\t\t107\n\t],\n\t\"./17.png\": [\n\t\t68513,\n\t\t8513\n\t],\n\t\"./18.png\": [\n\t\t44763,\n\t\t4763\n\t],\n\t\"./19.png\": [\n\t\t32795,\n\t\t2795\n\t],\n\t\"./2.png\": [\n\t\t90827,\n\t\t827\n\t],\n\t\"./20.png\": [\n\t\t35436,\n\t\t5436\n\t],\n\t\"./21.png\": [\n\t\t86962,\n\t\t6962\n\t],\n\t\"./22.png\": [\n\t\t29616,\n\t\t9616\n\t],\n\t\"./23.png\": [\n\t\t29079,\n\t\t9079\n\t],\n\t\"./24.png\": [\n\t\t69834,\n\t\t9834\n\t],\n\t\"./25.png\": [\n\t\t50806,\n\t\t806\n\t],\n\t\"./26.png\": [\n\t\t1840,\n\t\t1840\n\t],\n\t\"./29.png\": [\n\t\t77038,\n\t\t7038\n\t],\n\t\"./3.png\": [\n\t\t83348,\n\t\t3348\n\t],\n\t\"./30.png\": [\n\t\t40797,\n\t\t797\n\t],\n\t\"./31.png\": [\n\t\t15271,\n\t\t5271\n\t],\n\t\"./32.png\": [\n\t\t17500,\n\t\t7500\n\t],\n\t\"./33.png\": [\n\t\t4065,\n\t\t4065\n\t],\n\t\"./34.png\": [\n\t\t61895,\n\t\t1895\n\t],\n\t\"./35.png\": [\n\t\t54746,\n\t\t4746\n\t],\n\t\"./36.png\": [\n\t\t68464,\n\t\t8464\n\t],\n\t\"./37.png\": [\n\t\t75212,\n\t\t5078\n\t],\n\t\"./38.png\": [\n\t\t31324,\n\t\t1324\n\t],\n\t\"./39.png\": [\n\t\t61669,\n\t\t1669\n\t],\n\t\"./4.png\": [\n\t\t61093,\n\t\t1093\n\t],\n\t\"./40.png\": [\n\t\t60809,\n\t\t809\n\t],\n\t\"./41.png\": [\n\t\t96235,\n\t\t6235\n\t],\n\t\"./42.png\": [\n\t\t99769,\n\t\t9769\n\t],\n\t\"./43.png\": [\n\t\t11919,\n\t\t1919\n\t],\n\t\"./44.png\": [\n\t\t15607,\n\t\t5607\n\t],\n\t\"./5.png\": [\n\t\t13809,\n\t\t3809\n\t],\n\t\"./6.png\": [\n\t\t58305,\n\t\t8305\n\t],\n\t\"./7.png\": [\n\t\t75241,\n\t\t5241\n\t],\n\t\"./8.png\": [\n\t\t57816,\n\t\t7816\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 38728;\nmodule.exports = webpackAsyncContext;"],"names":["isFavorite","fontSize","color","Forecast","Card","spread","onClick","forecast","usePromise","icon","then","res","default","Promise","resolve","Typography","variant","title","temperature","src","alt","calcTemprature","round","Number","slice","useTemperatureType","favoriteLocations","temperatureType","useSelector","GeneralTemperatureModeSelect","useMemo","_favoriteLocations","TemperatureType","map","favoriteLocation","forecasts","useOneTemperatureType","useManyTemperatureType","HOME_FORM_REG_EXP","CONTROLLER_LOCATION_INPUT_RULES","required","value","message","pattern","useState","query","setQuery","promiseQuery","API","i","options","loading","placeholder","defaultOption","idProp","nameProp","inputRules","error","onSelect","onInputDebounce","onInputFocus","onInput","controlRef","onChange","onBlur","setValue","otherProps","open","setOpen","option","setOption","inputController","defaultValue","rules","control","useForm","mode","useController","name","useAutocompleteInput","get","useDebounce","field","inputDebounce","previousInputDebounce","usePrevious","useEffect","fieldState","_onInput","_onSelect","event","_onBlur","ref","onOpen","onClose","onInputChange","_","getOptionLabel","isOptionEqualToValue","renderInput","params","TextField","fullWidth","InputProps","startAdornment","Search","endAdornment","CircularProgress","size","helperText","onFocus","SharedBody","css","SharedBodyStates","Home","AutocompleteCard","TitleTypography","BodyHeader","Body","Loader","ErrorTypography","Forecasts","dispatch","useDispatch","loadingLocation","FavoriteLocationSelectLoading","errorLocation","FavoriteLocationSelectError","flow","FavoriteLocationSelectActiveEntity","activeLocation","FavoriteLocationSelectActive","useHomeQuery","response","loadingState","fetchFavoriteLocation","filter","location","test","LocalizedName","key","Key","localizedName","CardContent","favoriteLocationsActive","gutterBottom","Button","disabled","favoriteLocationsToggleFavorite","weatherText","favoriteLocationsSlice","favoriteLocationsLoading","webpackAsyncContext","req","__webpack_require__","o","e","Error","code","ids","id","t","keys","Object","module","exports"],"sourceRoot":""}